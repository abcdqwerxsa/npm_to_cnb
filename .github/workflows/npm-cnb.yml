name: Sync to CNB Artifact Registry

on:
  workflow_dispatch:
    inputs:
      package_list:
        description: 'Package list (name:version,name:version)'
        required: true
        default: 'lodash:4.17.21,@anthropic-ai/claude-code:2.0.1'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Sync packages to CNB
        env:
          CNB_TOKEN: ${{ secrets.CNB_TOKEN }}
        run: |
          echo "=== 开始同步到 CNB ==="
          
          # 创建主认证文件
          cat > /tmp/main.npmrc << EOF
          registry=https://npm.cnb.cool/nilpotenter/cloud-npm/-/packages/
          //npm.cnb.cool/nilpotenter/cloud-npm/-/packages/:_authToken=$CNB_TOKEN
          always-auth=true
          EOF
          
          IFS=',' read -ra PACKAGES <<< "${{ github.event.inputs.package_list }}"
          
          for spec in "${PACKAGES[@]}"; do
            IFS=':' read -ra PARTS <<< "$spec"
            pkg_name="${PARTS[0]}"
            pkg_version="${PARTS[1]}"
            
            echo "--- 处理: $pkg_name@$pkg_version ---"
            
            # 🔴 关键修改：使用 curl 直接检查包是否存在
            echo "检查包是否存在..."
            response=$(curl -s -o /dev/null -w "%{http_code}" \
              "https://npm.cnb.cool/nilpotenter/cloud-npm/-/packages/$pkg_name/$pkg_version" \
              -H "Authorization: Bearer $CNB_TOKEN")
            
            if [ "$response" = "200" ]; then
              echo "⏭️  包已存在: $pkg_name@$pkg_version (HTTP $response)"
              continue
            else
              echo "✅ 包不存在或无法访问 (HTTP $response)，开始同步..."
            fi
            
            # 同步流程
            mkdir temp_sync && cd temp_sync
            echo "下载包..."
            npm pack "${pkg_name}@${pkg_version}" --registry=https://registry.npmjs.org
            
            echo "解压包..."
            tar -xf *.tgz
            cd package
            
            echo "设置认证..."
            cp /tmp/main.npmrc .npmrc
            
            echo "发布包..."
            AUTHORIZED=true npm publish --ignore-scripts --loglevel=info
            
            cd ../..
            rm -rf temp_sync
            echo "✅ 同步完成: $pkg_name@$pkg_version"
          done
          
          rm -f /tmp/main.npmrc
          echo "🎉 所有包处理完成!"
